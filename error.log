{"error":{"cmd":"cd \"/Users/andrewshwetzer/HomeHarvest\" && poetry run python3 -c \"\nimport sys\nfrom homeharvest import scrape_property\nimport json\n\ntry:\n    print(\\\"Starting property search...\\\", file=sys.stderr)\n    properties = scrape_property(\n        location='78701',\n        listing_type='for_sale',\n        property_type=[\\\"House\\\"],\n        past_days=30,\n        include_photos=True\n    )\n    print(f\\\"Found {len(properties)} properties before filtering\\\", file=sys.stderr)\n    \n    # Apply all filters using AND logic\n    filtered = properties[\n        (properties['beds'] >= 0)\n        \n        & (properties['full_baths'] >= 0)\n        \n        & (properties['list_price'] >= 0)\n        & (properties['list_price'] <= 1000000)\n    ]\n    \n    # Convert to dictionary and ensure photo_urls are included\n    result = []\n    for _, row in filtered.iterrows():\n        property_dict = row.to_dict()\n        if 'photo_urls' not in property_dict or not property_dict['photo_urls']:\n            property_dict['photo_urls'] = []\n        result.append(property_dict)\n    \n    print(json.dumps(result))\nexcept Exception as e:\n    print(f\\\"Error occurred: {str(e)}\\\", file=sys.stderr)\n    print(json.dumps({'error': str(e)}), file=sys.stderr)\n    sys.exit(1)\n\"","code":1,"killed":false,"signal":null},"level":"error","message":"Error executing command:","stderr":"Starting property search...\nError occurred: scrape_property() got an unexpected keyword argument 'include_photos'\n{\"error\": \"scrape_property() got an unexpected keyword argument 'include_photos'\"}\n","timestamp":"2025-01-04T04:44:50.797Z"}
{"error":{"cmd":"cd \"/Users/andrewshwetzer/HomeHarvest\" && poetry run python3 -c \"\nimport sys\nfrom homeharvest import scrape_property\nimport json\n\ntry:\n    print(\\\"Starting property search...\\\", file=sys.stderr)\n    properties = scrape_property(\n        location='78701',\n        listing_type='for_sale',\n        property_type=[\\\"House\\\"],\n        past_days=30,\n        include_photos=True\n    )\n    print(f\\\"Found {len(properties)} properties before filtering\\\", file=sys.stderr)\n    \n    # Apply all filters using AND logic\n    filtered = properties[\n        (properties['beds'] >= 0)\n        \n        & (properties['full_baths'] >= 0)\n        \n        & (properties['list_price'] >= 0)\n        & (properties['list_price'] <= 1000000)\n    ]\n    \n    # Convert to dictionary and ensure photo_urls are included\n    result = []\n    for _, row in filtered.iterrows():\n        property_dict = row.to_dict()\n        if 'photo_urls' not in property_dict or not property_dict['photo_urls']:\n            property_dict['photo_urls'] = []\n        result.append(property_dict)\n    \n    print(json.dumps(result))\nexcept Exception as e:\n    print(f\\\"Error occurred: {str(e)}\\\", file=sys.stderr)\n    print(json.dumps({'error': str(e)}), file=sys.stderr)\n    sys.exit(1)\n\"","code":1,"killed":false,"signal":null},"level":"error","message":"Error executing command:","stderr":"Starting property search...\nError occurred: scrape_property() got an unexpected keyword argument 'include_photos'\n{\"error\": \"scrape_property() got an unexpected keyword argument 'include_photos'\"}\n","timestamp":"2025-01-04T04:45:23.782Z"}
{"error":{"cmd":"cd \"/Users/andrewshwetzer/HomeHarvest\" && poetry run python3 -c \"\nimport sys\nfrom homeharvest import scrape_property\nimport json\n\ntry:\n    print(\\\"Starting property search...\\\", file=sys.stderr)\n    properties = scrape_property(\n        location='78701',\n        listing_type='for_sale',\n        property_type=[\\\"House\\\"],\n        past_days=30\n    )\n    print(f\\\"Found {len(properties)} properties before filtering\\\", file=sys.stderr)\n    \n    # Apply all filters using AND logic\n    filtered = properties[\n        (properties['beds'] >= 0)\n        \n        & (properties['full_baths'] >= 0)\n        \n        & (properties['list_price'] >= 0)\n        & (properties['list_price'] <= 1000000)\n    ]\n    \n    # Convert to dictionary\n    result = []\n    for _, row in filtered.iterrows():\n        property_dict = row.to_dict()\n        result.append(property_dict)\n    \n    print(json.dumps(result))\nexcept Exception as e:\n    print(f\\\"Error occurred: {str(e)}\\\", file=sys.stderr)\n    print(json.dumps({'error': str(e)}), file=sys.stderr)\n    sys.exit(1)\n\"","code":1,"killed":false,"signal":null},"level":"error","message":"Error executing command:","stderr":"Starting property search...\nError occurred: 'HOUSE'\n{\"error\": \"'HOUSE'\"}\n","timestamp":"2025-01-04T04:47:48.149Z"}
{"error":{"cmd":"cd \"/Users/andrewshwetzer/HomeHarvest\" && poetry run python3 -c \"\nimport sys\nfrom homeharvest import scrape_property\nimport json\n\ntry:\n    print(\\\"Starting property search...\\\", file=sys.stderr)\n    properties = scrape_property(\n        location='Tampa, Florida',\n        listing_type='for_sale',\n        property_type=[\\\"house\\\"],\n        past_days=7\n    )\n    print(f\\\"Found {len(properties)} properties before filtering\\\", file=sys.stderr)\n    \n    # Apply all filters using AND logic\n    filtered = properties[\n        (properties['beds'] >= 1)\n        \n        & (properties['full_baths'] >= 0)\n        \n        & (properties['list_price'] >= 500000)\n        & (properties['list_price'] <= 1000000)\n    ]\n    \n    # Convert to dictionary\n    result = []\n    for _, row in filtered.iterrows():\n        property_dict = row.to_dict()\n        result.append(property_dict)\n    \n    print(json.dumps(result))\nexcept Exception as e:\n    print(f\\\"Error occurred: {str(e)}\\\", file=sys.stderr)\n    print(json.dumps({'error': str(e)}), file=sys.stderr)\n    sys.exit(1)\n\"","code":1,"killed":false,"signal":null},"level":"error","message":"Error executing command:","stderr":"Starting property search...\nError occurred: 'HOUSE'\n{\"error\": \"'HOUSE'\"}\n","timestamp":"2025-01-05T04:32:33.889Z"}
